<p id="demo"></p>

<script>
var cars = ["Saab", "Volvo", "BMW"]; //this first line creates an array, named cars.
document.getElementById("demo").innerHTML = cars; //this second line "finds" an element with id "Demo", 
//and displays the array in the innerHTML of it
</script>

try it yourself, creating an array;

var fruits = ["mango", "banana", pineapple];
var names = ["Chaojie", "Yiou", "Allen"];
var places = ["NewYorkCity", "Houston", "MillerPlace"]

var name = cars[0];
cars[0] = "Opel";

~[0] is the first element in an array. [1] is the second. arrays start with number 0.
this is how u refer to array "Elements"; with their "index numbers".

arrays can hold objects, functions, and arrays themselves!!! l0l

Array[0] = date.now;
Array[1] = myFunction;
Array[2] = [Array[1]];

~arrays are basically special kinds of objects. however they should still be classified as arrays.

var countries = ["Somalia", "Canada", "China"];
person[0] = return.Somalia

otherwise can store as objects, example
var countries = [africa:"Somalia", northAmerica:"Canada", asia:"China"];
countries.africa returns Somalia

regarding the 'length' property. example;
var directions = ["north", "south", "east", "west"];
directions.length;   				// will return 4. length = highest index # + 1

regarding the 'sort' method; will return all array elements in alphabetical order
directions.sort; 					// will return east, north, south, west

to add a new element to an existing array; use 'push' method 
directions.push("weast"); 			// will add new direction to existing [directions] array
